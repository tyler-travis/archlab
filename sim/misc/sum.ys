# Tyler Travis A01519795
# Tyler Tolman A01307949



# sum_list
# int sum_list(list_ptr ls)
# {
#   int val = 0;
#   while (ls) {
#     val += ls->val;
#     ls = ls->next;
#   }
#   return val;
# }

.pos 0

init:
  irmovl Stack, %esp
  irmovl Stack, %ebp
  jmp Main

.align 4
ele1:
  .long 0x00a
  .long ele2
ele2:
  .long 0x0b0
  .long ele3
ele3:
  .long 0xc00
  .long 0

Main:
  irmovl ele1, %edx
  pushl %edx
  call sum
  halt

sum:
  pushl %ebp
  rrmovl %esp, %ebp
  mrmovl 8(%ebp), %ebx    # ebx = ls
  irmovl $0, %eax         # eax = val = 0
  andl %ebx, %ebx         # set condition code
  je end

loop:
  mrmovl (%ebx), %ecx     # ecx = ls->val
  addl %ecx, %eax         # eax = eax + ecx = val + ls->val
  mrmovl 4(%ebx), %ebx    # ebx = ebx + 4 = ls = ls->next
  andl %ebx, %ebx         # set condition code
  jne loop

end:
  rrmovl %ebp, %esp
  popl %ebp
  ret

.pos 0x100
Stack:
